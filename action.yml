name: 'QMS generate verification report'
description: 'Generates a verification report based on pipeline metadata and test results as inputs.'
inputs:
  testresults_artifact:
    required: true
    description: 'Artifact name of files uploaded of previously generated test results during runs of (IV, PV) or (pIV, pPV), e.g. [testresults-validation, testresults-production].'
    default: ''
  repository_artifact:
    required: true
    description: 'Artifact name of the repository being tested: it will almost always be the triggering branch and repository of the workflow calling this action.'
    default: ''
  ready_for:
    required: true
    description: 'Indicates whether the verification report is generated for the validation or production environment with respective possible values: [production, use].'
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: nn-dma/generate-verification-report
        path: .

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.2
        cache: false

    # Note: v3 is currently used because v4 is not yet supported in GitHub Enterprise Server
    - name: Download repository
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.repository_artifact }}
        path: input/repository

    # Note: v3 is currently used because v4 is not yet supported in GitHub Enterprise Server
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.testresults_artifact }}
        path: input/testresults

    - name: Run other tests (dev debug)
      shell: bash
      run: |
        echo "Test results artifact name: ${{ inputs.testresults_artifact }}"
        echo "Ready for: ${{ inputs.ready_for }}"
        echo "Current directory: $(pwd)"
        echo "Repository directory:"
        ls -la input/repository
        echo "Test results directory:"
        ls -la input/testresults
        echo "Current:"
        ls -la
        echo ""
        echo "Parent:"
        ls -la ../
        echo ""
        echo "Grandparent:"
        ls -la ../../

    # TODO: Add injection of input parameters to 'parameters.json' file

    - name: Generate verification report
      uses: dagger/dagger-for-github@v5
      with:
        verb: run
        args: go run -C src main.go
        version: "0.11.0"

    - name: Print logs
      shell: bash
      if: always()
      run: cat src/run.log

    - name: Generate verification report filename
      shell: bash
      run: |
        verification_report_filename=$(src/script/get_verification_report_filename_for_context.sh $(jq -r '.environment_name' < input/parameters.json) $(jq -r '.pipeline_run_id' < input/parameters.json) ${{ inputs.ready_for }}).html
        echo "$verification_report_filename"
        echo "verification_report_filename=$verification_report_filename" >> $GITHUB_ENV

    - name: Generate verification report artifact name
      shell: bash
      run: |
        verification_report_artifact_name=$(src/script/get_verification_report_artifact_name_for_context.sh ${{ inputs.ready_for }})
        echo "$verification_report_artifact_name"
        echo "verification_report_artifact_name=$verification_report_artifact_name" >> $GITHUB_ENV

    - name: Upload verification report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.verification_report_artifact_name }}
        path: output/${{ env.verification_report_filename }}
