name: 'QMS generate verification report'
description: 'Generates a verification report based on pipeline metadata and test results as inputs.'
inputs:
  test:
    required: true
    description: 'test'
    default: ''
  ready_for:
    required: true
    description: 'Indicates whether the verification report is generated for the validation or production environment with respective possible values: [production, use].'
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: nn-dma/generate-verification-report
        path: .

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22.1
        cache: false
    
    - name: Run other tests (dev debug)
      shell: bash
      run: |
        echo "Test input: ${{ inputs.test }}"
        echo "Current directory: $(pwd)"
        echo "Current:"
        ls -la
        echo ""
        echo "Parent:"
        ls -la ../
        echo ""
        echo "Grandparent:"
        ls -la ../../
    
    - name: Generate verification report
      uses: dagger/dagger-for-github@v5
      with:
        verb: run
        args: go run -C src main.go
        version: "0.10.2"

    - name: Print logs
      shell: bash
      if: always()
      run: cat src/run.log

    - name: Generate verification report filename
      shell: bash
      run: |
        vrfn=$(src/script/get_verification_report_filename_for_context.sh $(jq -r '.environment_name' < input/parameters.json)) $(jq -r '.pipeline_run_id' < input/parameters.json)) {{ inputs.ready_for }}).html
        echo "$vrfn"
        echo "vrfn=$vrfn" >> $GITHUB_OUTPUT

    - name: Generate verification report artifact name
      shell: bash
      run: |
        vran=$(src/script/get_verification_report_artifact_name_for_context.sh ${{ inputs.ready_for }})
        echo "vran=$vran" >> $GITHUB_OUTPUT

    - name: Upload verification report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.vars.outputs.vran }}
        path: output/${{ steps.vars.outputs.vrfn }}
